trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  ApiPath: 'banqsoft-api'
  ApiName: 'banqsoft-api'
  WebPath: 'banqsoft-web'
  WebName: 'banqsoft-web'

jobs:
- job: web_ci
  displayName: 'Web CI'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'

  - script: |
      npm install -g @angular/cli
      npm install
    displayName: 'Install dependencies'
    workingDirectory: '$(WebPath)/'

  - script: |
      npm run lint
    displayName: 'Perform linting'
    workingDirectory: '$(WebPath)/'
    
  - script: |
      npm run test:ci
    displayName: 'Perform unit tests'
    workingDirectory: '$(WebPath)/'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/TESTS-*.xml'
    displayName: 'Publish angular test results'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage report'
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '**/cobertura-coverage.xml'
      failIfCoverageEmpty: true

  - script: |
      npm run build:prod
    displayName: 'Build project'
    workingDirectory: '$(WebPath)/'

  - task: PublishPipelineArtifact@0
    displayName: 'Publish artifacts'
    inputs:
      artifactName: '$(WebName)'
      targetPath: '$(WebPath)/dist/$(WebName)'

- job: api_ci
  displayName: 'Api CI'
  steps:
  - task: UseDotNet@2
    displayName: 'Install dotnet'
    inputs:
      version: '5.0.x'
      includePreviewVersions: true

  - script: |
      dotnet test --logger trx --collect "XPlat Code Coverage"
    displayName: 'Perform unit tests'
    workingDirectory: banqsoft-api-test

  - task: PublishTestResults@2
    displayName: 'Publish test results'
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage report'
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '**/coverage.cobertura.xml'
      failIfCoverageEmpty: false

  - task: DotNetCoreCLI@2
    displayName: 'Publish project'
    name: PublishBackendProject
    inputs:
      command: publish
      projects: '$(ApiPath)/*.csproj'
      publishWebProjects: false
      arguments: '--output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: true

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: '$(ApiName)'
    displayName: 'Publish artifacts'
   
#   - job: api_ci_deploy
#     displayName: 'Api CI - Deploy to Azure Web App'
#     dependsOn: api_ci
#     condition: succeeded()
#     steps:
#       - task: AzureWebApp@1
#         displayName: 'Deploy to Azure Web App'
#         inputs:
#           azureSubscription: '<your_azure_subscription>'
#           appName: '<your_web_app_name>'
#           package: '$(Build.ArtifactStagingDirectory)/$(ApiName)/**/*.zip'
#           startApplication: true
#           useWebDeploy: true
#           startUpCommand: 'dotnet run --project banqsoft-api'
#           deploymentMethod: 'runFromPackage'
#           runtimeStack: 'DOTNETCORE|5.0'
          
#   - job: web_ci_deploy
#     displayName: 'Web CI - Deploy to Azure Web App'
#     dependsOn: web_ci
#     condition: succeeded()
#     steps:
#       - task: AzureWebApp@1
#         displayName: 'Deploy to Azure Web App'
#         inputs:
#           azureSubscription: '<your_azure_subscription>'
#           appName: '<your_web_app_name>'
#           package: '$(Pipeline.Workspace)/$(WebName)/dist/$(WebName).zip'
#           startUpCommand: 'npm run start'
#           startApplication: true
#           useWebDeploy: true
          
          
          
